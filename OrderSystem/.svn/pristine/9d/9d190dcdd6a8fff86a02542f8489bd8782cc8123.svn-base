<template>
  <div class="progress-container">
    <div class="table_01">
      <el-table :data="progressData.table01Data" border style="width: 93%; margin:0 auto; " :row-style="{ height: '31px'}" @row-click="table01RowClick" :row-class-name="tableRowClassName" highlight-current-row>
        <el-table-column prop="sequence" label="序号" min-width="75" align="center">
          <template scope="scope">
            {{scope.row.sequence + 1}}
          </template>
        </el-table-column>
        <el-table-column prop="technologyname" label="流程名称" min-width="90" align="center">
        </el-table-column>
        <el-table-column prop="planworkhours" label="预计工时" min-width="90" align="center">
          <template scope="scope">
            <el-input v-model="scope.row.planworkhours" class="editInput" @change="changeCompleteamount(scope.row, true, scope.$index)"></el-input>
          </template>
        </el-table-column>
        <el-table-column prop="completeamount" label="完成数量" min-width="90" align="center">
          <template scope="scope">
            <!--<el-input v-model="scope.row.completeamount" class="editInput Danger-border"  @blur="blur01(scope.row,progressData.table01Data,scope.$index)" @change="changeCompleteamount(scope.row,progressData.table01Data)" :style="{backgroundColor:'#F8FAFE'}"></el-input>-->
            <!--<el-input v-model.number="scope.row.completeamount" :class="{'editInput': true, 'transparent-border': true , 'Danger-border':  progressData.table01Data[scope.$index -1] &&  (scope.row.completeamount > progressData.table01Data[scope.$index -1].completeamount)}" @change="changeCompleteamount(scope.row, true, scope.$index)" :style="{backgroundColor:'#F8FAFE'}"></el-input>-->
            <el-input v-model.number="scope.row.completeamount" :class="{'editInput': true, 'transparent-border': true}" @blur="blurCompleteamount(scope.row, true, scope.$index)" :style="{backgroundColor:'#F8FAFE'}"></el-input>
  
          </template>
        </el-table-column>
        <el-table-column prop="qualifiedamount" label="合格数量" min-width="90" align="center">
          <template scope="scope">
            <!--<el-input v-model="scope.row.qualifiedamount" class="editInput Danger-border" @blur="blur01(scope.row,progressData.table01Data,scope.$index)" @change="changQualifiedamount(scope.row,progressData.table01Data)" :style="scope.row.planworkhours == '--' ? {backgroundColor:'transparent'}:{backgroundColor:'#F8FAFE'}"></el-input>-->
            <el-input v-model.number="scope.row.qualifiedamount" :class="{'editInput': true, 'transparent-border': true, 'Danger-border': scope.row.qualifiedamount > scope.row.completeamount } " @blur="blurQualifiedamount(scope.row, true, scope.$index)" :style="scope.row.planworkhours == '--' ? {backgroundColor:'transparent'}:{backgroundColor:'#F8FAFE'}"></el-input>
  
          </template>
        </el-table-column>
        <el-table-column prop="technologystatus" label="状态" min-width="75" align="center">
          <template scope="scope">
            <!--<el-select v-model="scope.row.technologystatus" @change="selectChange(scope.row, true, scope.$index)" popper-class="text-center" :class="{'Danger-border': (scope.row.technologystatus == 3) && progressData.table01Data[scope.$index -1] &&  (scope.row.technologystatus > progressData.table01Data[scope.$index -1].technologystatus) }">-->
            <el-select v-model="scope.row.technologystatus" @change="selectChange(scope.row, true, scope.$index)" popper-class="text-center">
              <el-option label="待来料" value="0"></el-option>
              <el-option label="待处理" value="1"></el-option>
              <el-option label="进行中" value="2"></el-option>
              <el-option label="已完成" value="3"></el-option>
            </el-select>
          </template>
        </el-table-column>
        <el-table-column prop="completepercent" label="完成比例" min-width="130" align="center" class-name="scale">
          <template scope="scope">
            <div :style="{width: scope.row.completepercent + '%'}" class="scaleDiv">
              <div>
                <span>{{ scope.row.completepercent + '%' }}</span>
              </div>
            </div>
          </template>
        </el-table-column>
      </el-table>
    </div>
    <div class="line"></div>
    <div class="table_02">
      <el-table :data="progressData.table02Data" border height="false" style="width: 93%; margin:0 auto;" :row-style="{ height: '31px'}" highlight-current-row>
        <el-table-column type="index" label="序号" min-width="75" align="center">
        </el-table-column>
        <el-table-column prop="owner" label="负责人" min-width="130" align="center">
        </el-table-column>
        <el-table-column prop="completeamount" label="完成数量" min-width="130" align="center">
          <template scope="scope">
            <!--<el-input v-model="scope.row.completeamount" class="editInput" @blur="blur02(scope.row,progressData.table02Data,scope.$index)" @change="changeCompleteamount(scope.row,progressData.table02Data)" :style="{backgroundColor:'#F8FAFE'}"></el-input>-->
            <!--<el-input v-model.number="scope.row.completeamount" :class="{'editInput': true, 'Danger-border':  progressData.table02Data[scope.$index -1] &&  (scope.row.completeamount > progressData.table02Data[scope.$index -1].completeamount)}" @change="changeCompleteamount(scope.row, false, scope.$index)" :style="{backgroundColor:'#F8FAFE'}"></el-input>-->
            <el-input v-model.number="scope.row.completeamount" :class="{'editInput': true, 'transparent-border': true }" @blur="blurCompleteamount(scope.row, false, scope.$index)" :style="{backgroundColor:'#F8FAFE'}"></el-input>
  
          </template>
        </el-table-column>
        <el-table-column prop="qualifiedamount" label="合格数量" min-width="130" align="center">
          <template scope="scope">
            <!--<el-input v-model="scope.row.qualifiedamount" class="editInput" @blur="blur02(scope.row,progressData.table02Data,scope.$index)" @change="changQualifiedamount(scope.row,progressData.table02Data)" :style="scope.row.qualifiedamount == '--' ? {backgroundColor:'transparent'}:{backgroundColor:'#F8FAFE'}"></el-input>-->
            <el-input v-model.number="scope.row.qualifiedamount" data-a="scope.row.qualifiedamount" :data-b="scope.row.completeamount" :class="{'editInput': true,  'Danger-border': scope.row.qualifiedamount > scope.row.completeamount } " @blur="blurQualifiedamount(scope.row, false, scope.$index)" :style="scope.row.qualifiedamount == '--' ? {backgroundColor:'transparent'}:{backgroundColor:'#F8FAFE'}"></el-input>
  
          </template>
        </el-table-column>
        <el-table-column prop="createtime" label="录入时间" min-width="185" align="center">
        </el-table-column>
      </el-table>
    </div>
    <div class="footer">
      <el-button type="primary" @click="Save">保存数据</el-button>
    </div>
  </div>
</template>

<script>
import api from 'api/request.js'
let notifyObj
export default {
  props: ['progressData', 'Obj'],
  data() {
    return {
      SaveParam: {
        inorderid: '',
        productmodel: '',
        productserialno: '',
        headstr: [],
        detailstr: []
      },
      isCheck01: false,
      isCheck02: false,
      isCheck03: false
    }
  },
  created() {
   },
  beforeUpdate() {
    console.log('数据更新')
    this.SaveParam.inorderid = this.progressData.inorderid
    this.SaveParam.productmodel = this.progressData.productmodel
    this.SaveParam.productserialno = this.progressData.productserialno
  },
  updated() { },
  methods: {
    table01RowClick(row) {
      this.SaveParam.inorderid = row.inorderid
      this.SaveParam.productmodel = row.productmodel
      this.SaveParam.productserialno = row.productserialno

      this.setHeadstr(row, row.technologystatus)

      let param02 = {
        inorderid: row.inorderid,
        productmodel: row.productmodel,
        serialno: row.productserialno,
        sequence: row.sequence
      }
      api.order.getusertechnologysbyorderid(param02).then(res => {
        this.progressData.table02Data = res.data.data
      })
    },
    // changeCompleteamount(row, isTable01, index) {
    //   // 合格数量是否大于完成数量
    //   if (row.qualifiedamount > row.completeamount) {
    //     this.isCheck01 = true
    //     this.$notify({
    //       title: '警告',
    //       message: '同一流程必须满足【完成数量】≥【合格数量】，请重新修改！',
    //       type: 'error',
    //       duration: 10000
    //     })
    //   } else {
    //     this.isCheck01 = false
    //     if (isTable01) {
    //       this.setHeadstr(row, row.technologystatus, index)
    //     } else {
    //       this.setdetailstr(row, index)
    //     }
    //   }
    // },
    // changQualifiedamount(row, isTable01, index) {
    //   // 合格数量是否大于完成数量
    //   if (row.qualifiedamount > row.completeamount) {
    //     this.isCheck01 = true
    //     this.$notify({
    //       title: '警告',
    //       message: '同一流程必须满足【完成数量】≥【合格数量】，请重新修改！',
    //       type: 'error',
    //       duration: 10000
    //     })
    //   } else {
    //     this.isCheck01 = false
    //     if (isTable01) {
    //       this.setHeadstr(row, row.technologystatus, index)
    //     } else {
    //       this.setdetailstr(row, index)
    //     }
    //   }
    // },
    blurCompleteamount(row, isTable01, index) {
      // 合格数量是否大于完成数量
      if (row.qualifiedamount > row.completeamount) {
        this.isCheck01 = true
        if (notifyObj) {
          notifyObj.close()
        }
        notifyObj = this.$notify({
          title: '警告',
          message: '同一流程必须满足【完成数量】≥【合格数量】，请重新修改！',
          type: 'error',
          duration: 8000
        })
      } else {
        this.isCheck01 = false
        if (isTable01) {
          this.setHeadstr(row, row.technologystatus, index)
        } else {
          this.setdetailstr(row, index)
        }
      }
    },
    blurQualifiedamount(row, isTable01, index) {
      // 合格数量是否大于完成数量
      if (row.qualifiedamount > row.completeamount) {
        this.isCheck01 = true
         if (notifyObj) {
          notifyObj.close()
        }
        notifyObj = this.$notify({
          title: '警告',
          message: '同一流程必须满足【完成数量】≥【合格数量】，请重新修改！',
          type: 'error',
          duration: 8000
        })
      } else {
        this.isCheck01 = false
        if (isTable01) {
          this.setHeadstr(row, row.technologystatus, index)
        } else {
          this.setdetailstr(row, index)
        }
      }
    },
    selectChange(row, isTable01, index) {
      // 当前流程是完成状态  前面流程的状态是否是已完成
      // if ((row.technologystatus == 3) && this.progressData.table01Data[index - 1] && (row.technologystatus > this.progressData.table01Data[index - 1].technologystatus)) {
      //   this.isCheck03 = true
      //   this.$notify({
      //     title: '警告',
      //     message: '前面流程有未完成，请修改前面流程状态！',
      //     type: 'error',
      //     duration: 10000
      //   })
      // } else {
      //   this.isCheck03 = false
      //   this.setHeadstr(row, row.technologystatus, index)
      // }
      this.setHeadstr(row, row.technologystatus, index)
    },
    setHeadstr(row, statusText, index) {
      // 合格数量是否大于完成数量
      if (row.qualifiedamount > row.completeamount) {
        this.isCheck01 = true
      } else {
        this.isCheck01 = false
      }
      let headstr = row.sequence + '*' + row.completeamount + '*' + row.qualifiedamount + '*' + row.planworkhours + '*' + statusText + '$'
      this.SaveParam.headstr[row.sequence] = headstr
    },
    setdetailstr(row, index) {
      // 合格数量是否大于完成数量
      if (row.qualifiedamount > row.completeamount) {
        this.isCheck01 = true
      } else {
        this.isCheck01 = false
      }
      if (index) {
        // 当前流程合格数量是否大于 前面流程完成数量
        if (this.progressData.table02Data[index - 1] && (row.completeamount > this.progressData.table02Data[index - 1].completeamount)) {
          this.isCheck02 = true
        } else {
          this.isCheck02 = false
        }
      }
      let detailstr = row.sequence + '*' + row.completeamount + '*' + row.qualifiedamount + '*' + row.owner + '$'
      this.SaveParam.detailstr[row.sequence] = detailstr
    },
    tableRowClassName(row, index) {
      if (index === 0) {
        return 'current-row'
      }
    },
    Save() {
      if (this.isCheck01) {
         if (notifyObj) {
          notifyObj.close()
        }
        notifyObj = this.$notify({
          title: '警告',
          message: '同一流程必须满足【完成数量】≥【合格数量】，请重新修改！',
          type: 'error',
          duration: 8000
        })
        return
      }
      // if (this.isCheck03) {
      //    if (notifyObj) {
      //     notifyObj.close()
      //   }
      //   notifyObj = this.$notify({
      //     title: '警告',
      //     message: '前面流程有未完成，请修改前面流程状态！',
      //     type: 'error',
      //     duration: 10000
      //   })
      //   return
      // }
      this.SaveParam.headstr = this.SaveParam.headstr.join('')
      this.SaveParam.detailstr = this.SaveParam.detailstr.join('')

      let param = this.SaveParam
      api.order.updatetechnologyroute(param).then(res => {
        this.$message({
          message: '保存成功',
          type: 'success'
        })
        this.SaveParam = {
          inorderid: '',
          productmodel: '',
          productserialno: '',
          headstr: [],
          detailstr: []
        }
        this.Obj(this.$store.state.orderList.form)
      })
    }
  },
  filters: {},
  watch: {}
}
</script>

<style lang="stylus">
 .progress-container
   height: 100%
   padding-top: 20px
   box-sizing:border-box
   .cell
     padding: 0
   .el-table td
     height: auto
   .el-table
     height: 100%
     border-left: none
   .el-input  
      box-sizing: border-box
    .borderRed
      border: 1px solid #FF4949  
   .el-table::before,
     .el-table::after
       height : 0
     .el-table__header-wrapper
       .el-table__header
         border-left: 1px solid #dfe6ec
     .el-table__body-wrapper
       height : 80%
       overflow-x: hidden
       .el-table__body
         border-left: 1px solid #dfe6ec
   .editInput input
     border: 0
     background-color: #F8FAFE
     text-align: center
   .el-table--enable-row-transition .el-table__body td
     .editInput input
       transition: background-color .25s ease
   .el-table--enable-row-hover .el-table__body tr:hover>td
     .editInput input
       background-color: #eef1f6
   .el-table__body tr.current-row>td
     background-color: #edf7ff!important
     .editInput input
       background-color: #edf7ff!important
       border-radius: 0
    .editInput input
      &:focus 
        border: 1px solid #20a0ff
    .editInput.Danger-border input
      &:focus 
        border: 1px solid transparent
   .table_01
     height: 55%
     .el-select
       i
          display: none
       input
         padding: 0
         border: 0
         text-align: center
         background-color: transparent
     .el-dropdown
        display: block
        .el-button--primary
            display: block
            width: 100%
            background-color: transparent
            color: #333
            border: none
     .scale>div
       position: absolute
       top: 0
       right: 0
       bottom: 0
       left: 0
       line-height: 39px
     .scaleDiv
       background-color: #00FF00
       height: 100%
      span
        position: absolute
        top:0
        right: 0
        bottom: 0
        left: 0
        display: flex
        align-items: center
        justify-content: center
     .text-center
        text-align: center!important
   .table_02
     height: 30%
   .footer
     height: 10%
     background-color: #EFF2F7
     display: flex
     align-items: center
     justify-content: center
     .el-button
       width: 30%
</style>
