<template>
    <div class="roles-container">
        <div class="roles-content">
            <!-- <div class="roles-content-left text-center">
                                            <h4>所有菜单</h4>
                                            <ul>
                                                <li v-for="item in rolesList" @click="selectRole(item.roleid)" class="pointer">{{item.rolename}}</li>
                                            </ul>
                                        </div> -->
            <div class="roles-content-right">
                <!-- <el-tabs type="border-card" :active-name="acyiveName">
                                        <el-tab-pane label="菜单" name="menu"></el-tab-pane>
                                        <el-tree ref="tree" :data="treeData" node-key="menuid" :default-expand-all="true" :props="defaultProps" :render-content="renderContent">
                                        </el-tree>
                                    </el-tabs> -->
                <el-tree :data="data2" :props="defaultProps" show-checkbox node-key="id" default-expand-all :expand-on-click-node="false" :render-content="renderContent">
                </el-tree>
            </div>
        </div>
    </div>
</template>

<script>
let id = 1000
export default {
    created() {
        this.$store.state.adminleftnavnum = '/Authority/menu'
        this.$api.Authority.getTree().then(res => {
            if (res.data.code == 200) {
                this.treeData = res.data.data
            } else {
                this.$util.isError(res.data)
            }
        })
    },
    data() {
        return {
            rolesList: [],
            treeData: [],
            acyiveName: 'menu',
            // defaultProps: {
            //     children: 'childs',
            //     label: 'menuname'
            // },
            data2: [{
                id: 1,
                label: '一级 1',
                children: [{
                    id: 4,
                    label: '二级 1-1',
                    children: [{
                        id: 9,
                        label: '三级 1-1-1'
                    }, {
                        id: 10,
                        label: '三级 1-1-2'
                    }]
                }]
            }, {
                id: 2,
                label: '一级 2',
                children: [{
                    id: 5,
                    label: '二级 2-1'
                }, {
                    id: 6,
                    label: '二级 2-2'
                }]
            }, {
                id: 3,
                label: '一级 3',
                children: [{
                    id: 7,
                    label: '二级 3-1'
                }, {
                    id: 8,
                    label: '二级 3-2'
                }]
            }],
            defaultProps: {
                children: 'children',
                label: 'label'
            }
        }
    },
    methods: {
        selectRole(id) {
            let param = { roleid: id }
            this.$api.Authority.getRolemenuByRoleid(param).then(res => {
                if (res.data.code == 200) {
                    let data = res.data.data
                    for (let i = 0; i < data.length; i++) {
                    }
                    this.treeData = data
                } else {
                    this.$util.isError(res.data)
                }
            })
        },
        renderContent(createElement, { node, data, store }) {
            var self = this
            return createElement('span', [
                createElement('span', node.label),
                createElement('span', {
                    attrs: {
                        style: 'float: right; margin-right: 20px'
                    }
                }, [
                        createElement('el-button', {
                            attrs: {
                                size: 'mini'
                            },
                            on: {
                                click: function() {
                                    console.info('点击了节点' + data.id + '的添加按钮')
                                    store.append({ id: self.baseId++, label: 'testtest', children: [] }, data)
                                }
                            }
                        }, '添加'),
                        createElement('el-button', {
                            attrs: {
                                size: 'mini'
                            },
                            on: {
                                click: function() {
                                    console.info('点击了节点' + data.id + '的删除按钮')
                                    store.remove(data)
                                }
                            }
                        }, '删除')
                    ])
            ])
        },
        append(store, data) {
            store.append({ id: id++, label: 'testtest', children: [] }, data)
        },

        remove(store, data) {
            store.remove(data)
        }
    }

}
</script>

<style lang="stylus" scoped>
   .roles-container
      padding: 40px 30px
   .roles-content   
      display: table
      width: 100%
      min-height: 600px
      border: 1px solid #e5e5e5
   .roles-content-left
      display: table-cell
      vertical-align: top 
      width: 20%
      border-right: 1px solid #e5e5e5
      h4
        height: 40px
        line-height: 40px
        border-bottom: 1px solid #e5e5e5
        background-color: #eef1f6
      li
         height: 30px
         line-height: 30px
         &:hover
           color: #2c3e50
           background-color: #e4e8f1
      li.active     
           color: #fff
           background-color: #20a0ff
    .roles-content-right     
       display: table-cell 
       width: 80%
       .el-tree
          border: none
       .el-tabs--border-card   
          border: none
          box-shadow: none
       .el-tabs__header   
          border: none
</style>