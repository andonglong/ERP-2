<template>
	<div class="login">
		<div class="bg-color1"></div>
		<div class="bg-color2"></div>
		<div class="login-box">
			<div class="login-logo">
			<p>订单跟踪系统</p>
			</div>
			<section class="login-form">
				<p class="login-title">登录</p>
				<el-form :model="loginForm" :rules="rules" ref="loginForm">
					<el-form-item class='login-input' prop="moblie">
						<el-input v-model.number="loginForm.moblie" auto-complete="off"  placeholder="手机"></el-input>
					</el-form-item>
					<el-form-item prop="password" class='login-input'>
						<el-input  type="password" v-model="loginForm.password" auto-complete="off" placeholder="密码"></el-input>
					</el-form-item>
					<div class="login-tip">
					  <el-checkbox v-model="checked">一周内自动登录</el-checkbox>
					</div>
					<div class="submit-box">
						<el-button class="submit-btn" type="primary" :loading="load" @click='submit("loginForm")' @keyup.enter='submit("loginForm")'>登录</el-button>
					</div>
				</el-form>
			</section>
		</div>
	</div>
</template>

<script>
		import api from '../../api/request'
	  export default {
	    data() {
	    	var checkMoblie = (rule, value, callback) => {
	    		if(!value){
	    			return callback(new Error('手机号不能为空'))
	    		}
	    		setTimeout(() => {
		            if (!(/^1[34578]\d{9}$/.test(value)) || !Number.isInteger(value)) {
			              callback(new Error('手机号有误，请重填'));
			        } else {
			              callback();
			        }
		        }, 500);
	    	}
	    	var checkPassword = (rule, value, callback) => {
	    		if(!value){
	    			return callback(new Error('密码不能为空'))
	    		}else{
	    			callback();
	    		}
	    	}
		    return {
		        loginForm:{
		        	moblie: '',
			        password: "",
			        checked: ''
		        },
		        rules: {
		          moblie: [
		            { validator: checkMoblie, trigger: 'blur' }
		          ],
		          password: [
		            { validator: checkPassword, trigger: 'blur' }
		          ]
		        },
		        checked: false,
		        load:false
		    };
		},
    methods: {
      submit(loginForm) {
      	var _t = this
      	this.load = true
      	this.$refs[loginForm].validate((valid) => {
      		if(valid){
      			this.load = false
      			let data = {
                nameOrMobile:_t.loginForm.moblie,
                password: _t.loginForm.password
           }
      			//18680357414 654321
      			//登录接口
			    	api.user.login(data).then(res => {
			         if(res.data.code==200){
			         		let userInfo = {
			         			companyid :res.data.data.companyid,
			         			factoryid:res.data.data.factoryid,
			         			username:res.data.data.username,
			         			companyname:res.data.data.companyname
			         		}
					    		sessionStorage.setItem('token', res.data.data.sessionid);
					    		sessionStorage.setItem('userInfo', JSON.stringify(userInfo));
					    		_t.$router.push({ path: '/Track/order' });
					    	}else{
					    			let Err = ""
					    		  switch(res.data.code)
									  {
									  	case 'URC0002':
									  		Err = "用户名或手机号不存在"
									  		break
									  	case 'URC0003':
									  		Err = "该账户已禁用"
									  		break
									  	case 'URC0004':
									  		Err = "登录成功"
									  		break
									  	case 'URC0005':
									  		Err = "旧密码错误"
									  		break
									  	case 'URC0006':
									  		Err = "保存成功"
									  		break
									  	case 'URC0007':
									  		Err = "用户名不能为空"
									  		break
									  	case 'URC0008':
									  		Err = "手机号不能为空"
									  		break
									  	case 'URC0009':
									  		Err = "用户名已存在"
									  		break
									  	case 'URC0010':
									  		Err = "手机号已存在"
									  		break
									  	case 'URC0011':
									  		Err = "密码错误"
									  		break
									  	case 'URC0011':
									  		Err = "用户不存在"
									  		break
									  }
				    			_t.$alert(Err, '错误提示', {
				          	confirmButtonText: '确定',
				        	});
					    	}
			      })
      		}else{
      			this.load = false
      		}
      	})
      }
    },
    created() {
	  	let _t = this
	  	window.onkeydown = function(event){
	  		var e = event ? event : (window.event ? window.event : null);
        if (e && e.keyCode == 13) {
            _t.submit("loginForm")
        }
	    }
	  }
  }
  
</script>

<style lang="stylus">
	body
		/*background-color: #eee*/
		min-width: 1200px
	.login
		position:absolute
		top:0
		left:0
		bottom:0
		right:0
		background:url('login-bg.png') no-repeat
		background-size:100% 100%
		.login-box
			width: 400px
			margin:0 auto
			padding-top:12%
			.login-logo
				p
					font-size:46px
					font-weight:700
					color:#fff
					letter-spacing:15px
			.login-form
				background-color: #fff
				margin-top: 55px
				box-shadow:0 0 10px rgba(0,0,0,0.7)
		    .login-title
				  background-color: #8492a6
				  color: #ffffff
				  height:60px
				  font-weight:100
				  line-height:60px
				  font-size: 24px
				  text-align: center
				  letter-spacing:10px
			.login-input
				margin: 30px 36px 20px
				&:nth-child(2)
					margin: 0px 36px 20px
			.login-tip
				margin:0 36px
				text-align: left
				font-size:12px
				color:#333333
				.el-checkbox__label
					padding-left:10px
			.submit-box
				padding:30px 36px 20px 
			  .submit-btn
				  width: 100%
</style>