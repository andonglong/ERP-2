<template>
    <div class="roles-container">
        <div class="mg-b30">
            <el-button type="primary" class="button" :plain="true" @click="save">保存</el-button>
        </div>
        <div class="roles-content">
            <div class="roles-content-left  text-center">
                <h4>所有人员</h4>
                <ul>
                    <li v-for="(item, index) in staffList" @click="selectCompany(item, index)" :class="{active: index == staffActive}" class="pointer">{{item.username}}</li>
                </ul>
            </div>
            <div class="roles-content-right">
                <el-tabs type="border-card" :active-name="activeName" @tab-click="TabClick">
                    <el-tab-pane label="菜单" name="menu"></el-tab-pane>
                    <!-- <el-tab-pane label="角色" name="role"></el-tab-pane>  -->
                    <el-tree ref="tree" :data="treeData" show-checkbox node-key="menuid" :default-expand-all="true" :default-checked-keys="treeCheckedArray" :props="defaultProps">
                    </el-tree>
                </el-tabs>
            </div>
        </div>
    </div>
</template>

<script>
export default {
    created() {
        this.$store.state.adminleftnavnum = '/Authority/staff'
        this.fectchData()
    },
    data() {
        return {
            activeName: 'menu',
            initMenuName: 'menu',
            staffActive: 0,
            currentUserid: '',
            currentCompanyid: '',
            currentFactoryid: '',
            staffList: [],
            treeData: [],
            treeCheckedArray: [],
            defaultProps: {
                children: 'children',
                label: 'menuname'
            }
        }
    },
    methods: {
        save() {
            let param = {
                companyid: this.currentCompanyid,
                factoryid: this.currentFactoryid,
                userid: this.currentUserid,
                menuids: this.$refs.tree.getCheckedKeys()
            }
            this.$api.Authority.usermenuSave(param).then(res => {
                if (res.data.code == 200) {
                    if (param.companyid == this.$store.state.user.companyid && param.factoryid == this.$store.state.user.factoryid) {
                        location.reload()
                    }
                    this.$message.success('保存成功')
                    // this.fectchData()
                } else {
                    this.$util.isError(res.data)
                }
            })
        },
        selectCompany(item, index) {
            this.staffActive = index
            this.currentUserid = item.userid
            this.currentCompanyid = item.companyid
            this.currentFactoryid = item.factoryid
            this.activeName = this.initMenuName

            this.treeCheckedArray = []
            this.getMenu()
        },
        TabClick(obj) {
            this.acyiveName = obj.name
            if (obj.name == 'role') {
                this.getRole()
            }

            if (obj.name == 'menu') {
                this.getMenu()
            }
        },
        // 获取相应菜单
        getMenu() {
            let param = { companyid: this.currentCompanyid, factoryid: this.currentFactoryid, userid: this.currentUserid }
            this.$api.Authority.getUsermenuByUserid(param).then(res => {
                if (res.data && res.data.code == 200) {
                    let data = res.data.data
                    this.treeData = data
                    this.getTreeCheckedArray(this.treeData)
                } else {
                    this.$util.isError(res.data)
                }
            })
        },
        // 获取相应角色
        getRole() {
            let param = { companyid: this.currentCompanyid, factoryid: this.currentFactoryid, userid: this.currentUserid }
            this.$api.Authority.getUserRoleByUserid(param).then(res => {
                if (res.data && res.data.code == 200) {
                    let data = res.data.data
                    this.treeData = data
                } else {
                    this.$util.isError(res.data)
                }
            })
        },
        // 获取有权限的菜单数组
        getTreeCheckedArray(arr) {
            for (let i = 0; i < arr.length; i++) {
                if (arr[i].checked) {
                    this.treeCheckedArray.push(arr[i].menuid)
                }
                if (Object.prototype.toString.call(arr[i].children) === '[object Array]') {
                    this.getTreeCheckedArray(arr[i].children)
                }
            }
        },
        fectchData() {
            let param = { sortby: 'userid', keyword: '', pageindex: '1', pagesize: '10000' }
            this.$api.user.query(param).then(res => {
                if (res.data.code == 200) {
                    this.staffList = res.data.data.rows
                    // 默认选择第一个角色
                    this.selectCompany(this.staffList[0], 0)
                } else {
                    this.$util.isError(res.data)
                }
            })
        },
        // 显示模块
        showPage(arr) {
            for (let i = 0; i < arr.length; i++) {
                if (arr[i].menupath && arr[i].checked == true) {
                    this.$router.push({
                        path: arr[i].menupath
                    })
                    break
                }
                if (i >= arr.length && arr[i].checked == false) {
                    this.$router.push({
                        path: '/Authority/roles'
                    })
                }
            }
        }
    }

}
</script>

<style lang="stylus" scoped>
   .roles-container
      padding: 40px 30px
   .roles-content   
      display: table
      width: 100%
      min-height: 600px
      border: 1px solid #e5e5e5
   .roles-content-left
      display: table-cell
      vertical-align: top 
      width: 20%
      border-right: 1px solid #e5e5e5
      h4
        height: 40px
        line-height: 40px
        border-bottom: 1px solid #e5e5e5
        background-color: #eef1f6
      li
         height: 30px
         line-height: 30px
         &:hover
           color: #2c3e50
           background-color: #e4e8f1
      li.active     
           color: #fff
           background-color: #20a0ff
    .roles-content-right     
       display: table-cell 
       width: 80%
       .el-tree
          border: none
       .el-tabs--border-card   
          border: none
          box-shadow: none
       .el-tabs__header   
          border: none
</style>
