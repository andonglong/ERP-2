<template>
  <div class="ManageContainer">
    <el-row :gutter="20">
      <el-col :span="8">
        <div class="grid-content bg-purple">
          <el-input v-model="keyword" placeholder="手机/编号/员工编号" :icon="closeIcon" class="search_input" :change="importVal()" :on-icon-click="CloseIconClick"></el-input>
        </div>
      </el-col>
  
      <el-col :span="4">
        <el-button type="primary" class="search_btn" @click="Search()">查询</el-button>
      </el-col>
    </el-row>
  
    <el-button type="primary" class="add_btn" @click="Add()">+ 新增</el-button>
    <el-button type="primary" class="add_btn" @click="Add()">+ 产品详情</el-button>
  
    <el-table ref="multipleTable" :data="tableData" border tooltip-effect="dark" style="width:900px" class="table" @selection-change="handleSelectionChange">
  
      <el-table-column label="序号" width="88" align="center">
        <template scope="scope">{{ scope.row.employeeid }}</template>
      </el-table-column>
  
      <el-table-column prop="username" label="姓名" width="138" align="center">
      </el-table-column>
  
      <el-table-column prop="mobilenumber" label="手机号" width="128" align="center">
      </el-table-column>
  
      <el-table-column prop="userid" label="员工编号" width="142" align="center">
      </el-table-column>
  
      <el-table-column prop="technology" label="工序" min-width="146" align="center">
      </el-table-column>
  
      <el-table-column prop="b" label="操作" width="218" align="center" show-overflow-tooltip>
        <template scope="scope">
          <el-button @click="handleEdit(scope.$index, scope.row)">编辑</el-button>
          <el-button type="danger" @click="handleDelete(scope.$index, scope.row)" style="margin-left:28px;">删除</el-button>
        </template>
      </el-table-column>
  
    </el-table>
  
    <div class="block">
      <span class="demonstration">直接前往</span>
      <el-pagination @size-change="handleSizeChange" @current-change="handleCurrentChange" :current-page.sync="currentPage3" :page-size="10" layout="prev, pager, next, jumper" :total="1000">
      </el-pagination>
    </div>
  
    <el-dialog :title="dialogTitle" :visible.sync="dialogFormVisible" size="tiny">
      <el-form :model="form">
        <el-form-item label="姓名" :label-width="formLabelWidth">
          <el-input v-model="form.name" auto-complete="off"></el-input>
        </el-form-item>
        <el-form-item label="手机" :label-width="formLabelWidth">
          <el-input v-model="form.mobilenumber" auto-complete="off"></el-input>
        </el-form-item>
        <el-form-item label="负责工序" :label-width="formLabelWidth">
          <el-checkbox-group v-model="checkedCities1">
            <div class="process">
              <el-checkbox v-for="city in cities" :label="city" :key="city" style="display:block;">{{city}}</el-checkbox>
            </div>
          </el-checkbox-group>
        </el-form-item>
      </el-form>
      <div slot="footer" class="dialog-footer">
        <el-button @click="Add_cancel()">取 消</el-button>
        <el-button type="primary" @click="Add_confirm()">确 定</el-button>
      </div>
    </el-dialog>
  
    <v-productDetail></v-productDetail>
  </div>
</template>

<script>
import request from '../../api/request.js'
import productDetail from '../../components/orderTracking/productDetail/productDetail'


export default {

  data() {
    return {
      keyword: '',
      closeIcon: '',
      tableData: [{
        employeeid: '1',
        username: '王小虎',
        mobilenumber: '18818478640',
        userid: '11213212',
        technology: 'dsauhygdusayhgduysa'
      },
      {
        employeeid: '1',
        username: '王小虎',
        mobilenumber: '18818478640',
        userid: '11213212',
        technology: 'dsauhygdusayhgduysa'
      }],
      multipleSelection: [],

      dialogTitle: '',
      dialogFormVisible: false,
      form: {
        name: '',
        mobilenumber: ''
      },
      formLabelWidth: '75px',
      checkedCities1: ['上海', '北京'],
      cities: ['上海', '北京', '广州', '深圳'],
      currentPage3: 5,
    }
  },
  components: {
    'v-productDetail': productDetail,
  },
  created() {
    this.fetchData()
    console.log(this.$http)


  },
  watch: {
    '$rotue': 'fetchData'
  },
  methods: {
    importVal() {
      if (this.keyword) {
        this.closeIcon = "close"
      } else {
        this.closeIcon = ""
      }
    },
    CloseIconClick() {
      this.keyword = ''
    },
    Search() {
      let param = { keyword: this.keyword }
      request.user.query(param).then(res => {
        console.log(res.data.data)
        this.tableData = res.data.data
      })
      console.log("我是查询")

    },
    Add() {
      this.dialogTitle = "新增员工";
      this.dialogFormVisible = true;
    },
    Add_cancel() {
      this.dialogFormVisible = false;
    },
    Add_confirm() {
      let param = {
        username: this.form.name,
        mobilenumber: this.form.mobilenumber,
        employeeid: '123',
        "technology[0]": ''
      }
      for (let i = 0; i < this.checkedCities1.length; i++) {
        let technology = "technology[" + i + "]"
        param[technology] = this.checkedCities1[i]
      }
      console.log(param)
      if (this.dialogTitle == '新增员工') {

        request.user.adduser(param).then(res => {
          console.log(res)
          this.dialogFormVisible = false;
          this.fetchData()
        })

        return;
      }
      if (this.dialogTitle == '编辑') {
        request.user.edituser(param).then(res => {
          console.log(res)
          this.dialogFormVisible = false;
        })
        return;
      }

    },
    handleEdit(index, row) {
      this.dialogTitle = "编辑"
      this.dialogFormVisible = true
    },
    handleDelete(index, row) {
      console.log(index, row);
    },

    handleSizeChange(val) {
      console.log(`每页 ${val} 条`);
    },
    handleCurrentChange(val) {
      console.log(`当前页: ${val}`);
    },

    fetchData() {
      request.user.query().then(res => {
        console.log(res)
        res.data.data[0].technology = ["我", "你"]
        res = res.data.data

        for (let i = 0; i < res.length; i++) {
          res[i].technology = res[i].technology.join("、");
        }
        this.tableData = res
        console.log(this.tableData)
      })
    },



    handleSelectionChange(val) {
      this.multipleSelection = val;
    },


  }
}
</script>

<style lang='stylus'>

  .ManageContainer {
    padding: 50px 30px

    .search_btn {
      width: 90px
    }
    

    .add_btn {
      margin: 30px 0 20px 0   
      width: 90px
    }
      

    .table tr td {
      padding: 4px 0
    }
      

    .mg_l20 {
      margin-left: 28px
    }
      
  
    .el-dialog .el-dialog__body {
      padding-bottom: 0;
    }
      

    .el-form .el-input{
      width: 280px
    }
      

    .el-dialog--tiny{
      min-width: 420px
    }
      

    .process {
      height:200px
      width: 280px
      border:1px solid #bfcbd9
      border-radius: 5px
      
      >label{
        margin-left:10px !important
      }
          
    }
   

  }
     

 
  
   
</style>