<template>
    <div class="upload-box">
        <div slot="one">
            <div class="upload-step">
                <h3 class="upload-step-title">{{Data.one.h3}}</h3>
                <p class="upload-step-des">{{Data.one.p}}</p>
                <a :href="Data.one.importModelUrl">{{Data.one.a}}</a>
            </div>
        </div>
        <div slot="two">
            <div class="upload-step">
                <h3 class="upload-step-title">{{Data.two.h3}}</h3>
                <p class="upload-step-des">{{Data.two.p}}</p>
                <el-upload class="upload-demo" ref="upload" :action="Data.two.actionUrl" :headers="Data.two.headers" :data="Data.twouploadPrams" name="excelorders" :on-change="handleChange" :on-success="handleSuccess" :on-error="handleError" :on-remove="handleremove" :file-list="fileList" :before-upload="beforeAvatarUpload" :auto-upload="false">
                    <el-button slot="trigger" type="primary">上传文件</el-button>
                    <div slot="tip" class="el-upload__tip"></div>
                </el-upload>
            </div>
        </div>
        <div slot="three">
            <div class="upload-step">
                <h3 class="upload-step-title">{{Data.three.h3}}</h3>
                <p class="upload-step-des">{{Data.three.p}}</p>
            </div>
        </div>
        <!-- <div slot="button"> -->
            <div class="upload-start">
                <el-button type="primary" @click="submitUpload" :disabled="disabled">开始导入</el-button>
            <!-- </div> -->
        </div>
    </div>
</template>

<script>
// import api from 'api/request.js'
export default {
    props: ['Data', 'inquiryorderid'],
    created() {
    },
    data() {
        return {
            fileList: [],
            disabled: true
        }
    },
    methods: {
        submitUpload() {
            this.$refs.upload.submit()
            // this.$emit('listenUploadorder', false)
        },
        beforeAvatarUpload(file) {
            let isExcel = false
            if (file.type === 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' || file.type === 'application/vnd.ms-excel') {
                isExcel = true
            }
            //  获取不到type时
            if (!isExcel && file.type === '') {
                if (file.name.split('.')[1] === 'xls' || file.name.split('.')[1] === 'xlsx') {
                    isExcel = true
                }
            }

            const isLt5M = file.size / 1024 / 1024 < 5
            if (!isExcel) {
                this.$message.error('文件格式错误，请选择Excel文件!')
            }
            if (!isLt5M) {
                this.$message.error('上传文件大小大小不能超过 5MB!')
            }
            return isExcel && isLt5M
        },
        handleChange(file, fileList) {
            this.uploadPrams.inquiryorderid = this.inquiryorderid
            this.uploadPrams.excelorder = file.url
            this.disabled = false
            if (fileList.length > 1) {
                this.fileList = fileList.slice(1)
            }
        },
        handleremove(file, fileList) {
            this.disabled = true
            this.fileList = fileList
            document.querySelectorAll('input[name=excelorders]')[0].value = ''
        },
        handleSuccess(err, file, fileList) {
            let _t = this
            _t.fileList = []
            _t.disabled = true
            if (file.response.code == 200) {
                this.$message({
                    message: '上传成功',
                    type: 'success',
                    duration: 1500,
                    onClose: function () {
                        _t.$emit('listenUploadorder', false)
                    }
                })
            } else {
                this.$alert(err.data, '提示', {
                    confirmButtonText: '确定',
                    callback: action => {
                    }
                })
            }
        },
        handleError(err, file, fileList) {
            this.$alert('上传失败，请重新上传', '提示', {
                confirmButtonText: '确定',
                callback: action => {
                }
            })
        },
        uploadExlA() {
        }
    }

}
</script>

<style lang="stylus" scoped>
  a
    text-decoration: none
	.upload-box
		font-size:14px
		color:#666
		.upload-tip
			color:#f7ba2a
			line-height:22px
			margin-bottom:13px
			.icon-info
				color:#f7ba2a
				margin-right:7px
		.upload-step
			margin-bottom:30px
			line-height:26px
			.upload-step-title
				font-size:16px
				color:#333333
			.upload-step-des
				font-size:14px
				color:#666
			a
				color:#20a0ff
				&:hover
                   cursor: pointer
					color:#4db3ff
			button
				margin-top:5px
		.upload-start
			text-align:right
</style>
