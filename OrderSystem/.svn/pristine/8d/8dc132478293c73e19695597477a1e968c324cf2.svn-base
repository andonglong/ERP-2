<template>
    <div class="roles-container">
        <div class="roles-content">
            <!-- <div class="roles-content-left text-center">
                                                                                <h4>所有菜单</h4>
                                                                                <ul>
                                                                                    <li v-for="item in rolesList" @click="selectRole(item.roleid)" class="pointer">{{item.rolename}}</li>
                                                                                </ul>
                                                                            </div> -->
            <div class="roles-content-right">
                <el-tabs type="border-card" :active-name="acyiveName">
                    <el-tab-pane label="菜单" name="menu"></el-tab-pane>
                    <el-tree ref="tree" :data="treeData" node-key="menuid" :default-expand-all="true" :props="defaultProps" :expand-on-click-node="false" :render-content="renderContent">
                    </el-tree>
                </el-tabs>
                <!-- <el-tree :data="data2" :props="defaultPropsB" show-checkbox node-key="id" default-expand-all :expand-on-click-node="false" :render-content="renderContent">
                                        </el-tree> -->
            </div>

        </div>
        <el-dialog :title="dialogTitle" :visible.sync="dialogFormVisible">
            <el-form :model="form">
                <el-form-item label="菜单名称" :label-width="formLabelWidth">
                    <el-input v-model="form.name" auto-complete="off" placeholder="请输入新增角色名称"></el-input>
                </el-form-item>
            </el-form>
            <div slot="footer" class="dialog-footer">
                <el-button @click="dialogFormVisible = false">取 消</el-button>
                <el-button type="primary" @click="addConfirm">确 定</el-button>
            </div>
        </el-dialog>
    </div>
</template>

<script>
let P = 0
export default {
    created() {
        this.$store.state.adminleftnavnum = '/Authority/menu'
        this.$api.Authority.getTree().then(res => {
            if (res.data.code == 200) {
                this.treeData = res.data.data
            } else {
                this.$util.isError(res.data)
            }
        })
    },
    data() {
        return {
            rolesList: [],
            treeData: [],
            acyiveName: 'menu',
            defaultProps: {
                children: 'childs',
                label: 'menuname'
            },
            dialogFormVisible: false,
            form: {
                name: ''
            },
            formLabelWidth: '80px',
            dialogTitle: '',
            store: '',
            appendData: {}
        }
    },
    methods: {
        selectRole(id) {
            let param = { roleid: id }
            this.$api.Authority.getRolemenuByRoleid(param).then(res => {
                if (res.data.code == 200) {
                    let data = res.data.data
                    for (let i = 0; i < data.length; i++) {
                    }
                    this.treeData = data
                } else {
                    this.$util.isError(res.data)
                }
            })
        },
        addConfirm() {
            this.getTreeCheckedArray(this.treeData, this.appendData.menuid)
            this.dialogFormVisible = false
        },
        renderContent(h, { node, data, store }) {
            return (
                <span>
                    <span>
                        <span>{node.label}</span>
                    </span>
                    <span style="float: right; margin-right: 20px">
                        <el-button size="mini" on-click={() => this.append(store, data)}>添加</el-button>
                        <el-button size="mini" on-click={() => this.remove(store, data)}>删除</el-button>
                    </span>
                </span>)
        },
        append(store, data) {
            this.dialogFormVisible = true
            this.dialogTitle = '添加菜单'
            this.appendData = data
            console.log(this.appendData.menuid)
            // store.append({ id: 1000, label: 'testtest', children: [] }, data)
        },

        remove(store, data) {
            store.remove(data)
        },

        getTreeCheckedArray(arr, menuid) {
            console.log(arr)
            for (let i = 0; i < arr.length; i++) {
                if (arr[i].menuid == menuid) {
                    P++
                    console.log(P)
                    this.$util.isArray(arr[i].childs).push({
                        childs: null,
                        isvisible: true,
                        menudescription: null,
                        menuid: 1150160738,
                        menulevel: 2,
                        menuname: '测试菜单3',
                        menupath: 'test.setse.ssdfA',
                        menutype: null,
                        orderindex: 2,
                        parentmenuid: 1960145202
                    })
                    return
                }
                if (this.$util.isArray(arr[i].childs).length) {
                    this.getTreeCheckedArray(arr[i].childs, menuid)
                }
            }
        }
    }

}
</script>

<style lang="stylus" scoped>
   .roles-container
      padding: 40px 30px
   .roles-content   
      display: table
      width: 100%
      min-height: 600px
      border: 1px solid #e5e5e5
   .roles-content-left
      display: table-cell
      vertical-align: top 
      width: 20%
      border-right: 1px solid #e5e5e5
      h4
        height: 40px
        line-height: 40px
        border-bottom: 1px solid #e5e5e5
        background-color: #eef1f6
      li
         height: 30px
         line-height: 30px
         &:hover
           color: #2c3e50
           background-color: #e4e8f1
      li.active     
           color: #fff
           background-color: #20a0ff
    .roles-content-right     
       display: table-cell 
       width: 80%
       .el-tree
          border: none
       .el-tabs--border-card   
          border: none
          box-shadow: none
       .el-tabs__header   
          border: none
</style>